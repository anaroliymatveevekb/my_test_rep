---
- name: ElasticSearch installing
  hosts: elastic-hosts
  become: true
  tasks:
    - name: RAM settings
      command: sysctl -w vm.max_map_count=262144
    - name: ElasticSearch Install a list of packages
      ansible.builtin.apt:
        pkg:
        - elasticsearch
    - name: check if my user exists
      shell: /usr/share/elasticsearch/bin/elasticsearch-users list | grep -c userl
      register: has_user
      failed_when: has_user.rc not in [ 0, 1, 2, 3 ]
    - name: create user
      shell: /usr/share/elasticsearch/bin/elasticsearch-users useradd userl -p 123456789 -r superuser
      when: has_user.stdout == "0"
    - name: just change password
      shell: /usr/share/elasticsearch/bin/elasticsearch-users passwd userl -p 123456789
      when: has_user.stdout != "0"
    - name: add kibana_system role to user
      shell: /usr/share/elasticsearch/bin/elasticsearch-users roles userl -a kibana_system
    - name: create service elasticsearch
      template:
        src: config/elasticsearch/elasticsearch.yml.j2
        dest: /etc/elasticsearch/elasticsearch.yml
        owner: elasticsearch
    - name: Customising Elascticsearch Startup time from 75 to 210 sec - create directory form CustomConf
      file:
        path: /usr/lib/systemd/system/elasticsearch.service.d
        state: directory
    - name: Customising Elascticsearch Startup time from 75 to 210 sec - creating file
      template:
        src: config/elasticsearch.service.d/startup-timeout.conf.j2
        dest: /usr/lib/systemd/system/elasticsearch.service.d/startup-timeout.conf
    - name: Enable and Start ElasticSearch
      ansible.builtin.service:
        name: elasticsearch
        enabled: true
        state: started
      register: result
      ignore_errors: true
    - name: Show result of task
      debug:
        var: result

- name: KIBANA
  hosts: kibana-hosts
  become: true
  tasks:
    - name: KIBANA install
      ansible.builtin.apt:
        pkg:
        - kibana
    - name: config service elasticsearch
      template:
        src: config/kibana/kibana.yml.j2
        dest: /etc/kibana/kibana.yml
        owner: kibana
    - name: Enable and Start Kibana
      ansible.builtin.service:
        name: kibana
        enabled: true
        state: started

- name: WEB run filebeat
  hosts: webservers
  become: true
  tasks:
    - name: cmd for activate filebeat-nginx
      command: filebeat modules enable system nginx
    - name: Edit service filebeat
      template:
        src: config/filebeat/filebeat.yml.j2
        dest: /etc/filebeat/filebeat.yml
    - name: Edit service filebeat/nginx
      template:
        src: config/filebeat/modules.d/nginx.yml.j2
        dest: /etc/filebeat/modules.d/nginx.yml
    - name: Edit service filebeat/nginx
      template:
        src: config/filebeat/modules.d/system.yml.j2
        dest: /etc/filebeat/modules.d/system.yml
    - name: Start service filebeat
      ansible.builtin.service:
        name: filebeat.service
        state: restarted
    - name: Check if Kibana is accessible
      uri:
        url: 'http://kibana:5601/api/status'
        return_content: no
        validate_certs: no
        user: "userl"
        password: "123456789"
        method: GET
        force_basic_auth: true
        status_code:
          - 200
      until: uri_kibana_output.status == 200
      retries: 48 # Retries for 24 * 5 seconds = 240 seconds = 4 minutes
      delay: 5 # Every 5 seconds
      register: uri_kibana_output
    - name: Enabling filebeat for kibana (with ignore_errors, it's too long process)
      command: filebeat setup
      ignore_errors: true